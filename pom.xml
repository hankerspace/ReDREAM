<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.5.1</version>
    </parent>

    <groupId>fr.utbm.ciad.redream</groupId>
    <artifactId>redream-cloud</artifactId>
    <version>1.0.0</version>
    <name>${project.artifactId}</name>
    <packaging>pom</packaging>

    <modules>
        <module>redream-core</module>
        <module>redream-admin-server</module>
        <module>redream-vehicle-service</module>
        <module>redream-user-service</module>
        <module>redream-routing-service</module>
        <module>redream-energy-service</module>
        <module>redream-auth-service</module>
        <module>redream-config-server</module>
        <module>redream-discovery-server</module>
        <module>redream-api-gateway</module>
    </modules>

    <properties>
        <java.version>1.8</java.version>

        <assertj.version>3.17.1</assertj.version>

        <spring-boot.version>2.5.1</spring-boot.version>
        <spring-security.version>5.5.3</spring-security.version>
        <spring-cloud.version>2020.0.3</spring-cloud.version>
        <chaos-monkey-spring-boot.version>2.3.10</chaos-monkey-spring-boot.version>

        <docker.image.prefix>isaratech.registry.jetbrains.space/p/redream/redream</docker.image.prefix>
        <docker.image.exposed.port>9090</docker.image.exposed.port>
        <docker.image.dockerfile.dir>${basedir}</docker.image.dockerfile.dir>
        <docker.image.dockerize.version>v0.6.1</docker.image.dockerize.version>
        <docker.plugin.version>1.2.2</docker.plugin.version>

        <keycloak.version>15.0.2</keycloak.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>chaos-monkey-spring-boot</artifactId>
                <version>${chaos-monkey-spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertj.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.keycloak.bom</groupId>
                <artifactId>keycloak-adapter-bom</artifactId>
                <version>${keycloak.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>fr.utbm.ciad.redream</groupId>
                <artifactId>redream-core</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>fr.utbm.ciad.redream</groupId>
                <artifactId>redream-vehicle-service</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>fr.utbm.ciad.redream</groupId>
                <artifactId>redream-routing-service</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>fr.utbm.ciad.redream</groupId>
                <artifactId>redream-energy-service</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>fr.utbm.ciad.redream</groupId>
                <artifactId>redream-auth-service</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-boot-starter</artifactId>
                <version>3.0.0</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>3.0.0</version>
            </dependency>


        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.1</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <testSource>${java.version}</testSource>
                        <testTarget>${java.version}</testTarget>
                    </configuration>
                </plugin>
                <!-- Needed to package a spring boot dependency for another module -->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>2.5.1</version>

                    <!--Spring Boot 2 configuration-->
                    <configuration>
                        <classifier>exec</classifier>
                    </configuration>
                </plugin>
            </plugins>

        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
        </plugins>

    </build>

    <profiles>
        <profile>
            <id>springboot</id>
            <activation>
                <file>
                    <!-- Just a way to identify a Spring Boot application -->
                    <exists>src/main/resources/bootstrap.yml</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <configuration>
                            <fork>true</fork>
                            <!-- Layered jars optimizes Docker images -->
                            <layers>
                                <enabled>true</enabled>
                            </layers>
                        </configuration>
                        <executions>
                            <execution>
                                <!-- Spring Boot Actuator displays build-related information if a META-INF/build-info.properties file is present -->
                                <goals>
                                    <goal>build-info</goal>
                                </goals>
                                <configuration>
                                    <additionalProperties>
                                        <encoding.source>${project.build.sourceEncoding}</encoding.source>
                                        <encoding.reporting>${project.reporting.outputEncoding}</encoding.reporting>
                                        <java.source>${maven.compiler.source}</java.source>
                                        <java.target>${maven.compiler.target}</java.target>
                                    </additionalProperties>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>3.8.1</version>
                        <configuration>
                            <source>${java.version}</source>
                            <target>${java.version}</target>
                            <testSource>${java.version}</testSource>
                            <testTarget>${java.version}</testTarget>
                        </configuration>
                    </plugin>

<!--                    &lt;!&ndash; Spring Boot Actuator displays build-related information if a META-INF/build-info.properties file is present &ndash;&gt;-->
<!--                    <plugin>-->
<!--                        <groupId>pl.project13.maven</groupId>-->
<!--                        <artifactId>git-commit-id-plugin</artifactId>-->
<!--                        <executions>-->
<!--                            <execution>-->
<!--                                <goals>-->
<!--                                    <goal>revision</goal>-->
<!--                                </goals>-->
<!--                            </execution>-->
<!--                        </executions>-->
<!--                        <configuration>-->
<!--                            <verbose>true</verbose>-->
<!--                            <dateFormat>yyyy-MM-dd'T'HH:mm:ssZ</dateFormat>-->
<!--                            <generateGitPropertiesFile>true</generateGitPropertiesFile>-->
<!--                            <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties-->
<!--                            </generateGitPropertiesFilename>-->
<!--                            <failOnNoGitDirectory>false</failOnNoGitDirectory>-->
<!--                            <failOnUnableToExtractRepoInfo>false</failOnUnableToExtractRepoInfo>-->
<!--                        </configuration>-->
<!--                    </plugin>-->
                </plugins>
            </build>
        </profile>

        <profile>
            <id>buildDocker</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>com.spotify</groupId>
                            <artifactId>docker-maven-plugin</artifactId>
                            <version>${docker.plugin.version}</version>
                            <executions>
                                <execution>
                                    <phase>install</phase>
                                    <goals>
                                        <goal>build</goal>
                                    </goals>
                                </execution>
                            </executions>
                            <configuration>
                                <imageName>${docker.image.prefix}/${project.artifactId}</imageName>
                                <dockerDirectory>${docker.image.dockerfile.dir}</dockerDirectory>
                                <serverId>space-maven</serverId>
                                <registryUrl>https://isaratech.registry.jetbrains.space/p/redream/redream/</registryUrl>
                                <resources>
                                    <resource>
                                        <targetPath>/</targetPath>
                                        <directory>${project.build.directory}</directory>
                                        <include>${project.build.finalName}-exec.jar</include>
                                    </resource>
                                </resources>
                                <buildArgs>
                                    <ARTIFACT_NAME>${project.build.finalName}-exec</ARTIFACT_NAME>
                                    <EXPOSED_PORT>${docker.image.exposed.port}</EXPOSED_PORT>
                                    <DOCKERIZE_VERSION>${docker.image.dockerize.version}</DOCKERIZE_VERSION>
                                </buildArgs>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>
</project>
